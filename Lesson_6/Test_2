#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jun  4 15:42:41 2020

@author: vladislav
"""

import util

def merge_triple(a, b, c):
    
    d = [0] * (len(a) + len(b) + len(c))
    i = 0
    j = 0
    k = 0
    n = 0

    while i < len(a) and j < len(b) and k < len(c):
        if a[i] < b[j]:
            if c[k] < a[i]:
                d[n] = c[k]
                k += 1
                n += 1
            else:
                d[n] = a[i]
                i += 1
                n += 1
        else:
            if c[k] < b[j]:
                d[n] = c[k]
                k += 1
                n += 1
            else:
                d[n] = b[j]
                j += 1
                n += 1
    
    while i < len(a) and j < len(b):
        if a[i] < b[j]:
            d[n] = a[i]
            i += 1
            n += 1
        else:
            d[n] = b[j]
            j += 1
            n += 1
    
    while j < len(b) and k < len(c):
        if b[j] < c[k]:
            d[n] = b[j]
            j += 1
            n += 1
        else:
            d[n] = c[k]
            k += 1
            n += 1
    
    while i < len(a) and k < len(c):
        if a[i] < c[k]:
            d[n] = a[i]
            i += 1
            n += 1
        else:
            d[n] = c[k]
            k += 1
            n += 1
    
    while i < len(a):
        d[n] = a[i]
        i += 1
        n += 1
    
    while j < len(b):
        d[n] = b[j]
        j += 1
        n += 1
    
    while k < len(c):
        d[n] = c[k]
        k += 1
        n += 1 

    return d

def merge_sort_triple(a):
    
    if len(a) == 0:
        return
    
    if len(a) == 1:
        return a
    
    third = len(a) // 3

    left_part =     [a[i] for i in range(0, third)          ]
    middle_part =   [a[i] for i in range(third, 2 * third + 1)  ]
    right_part =    [a[i] for i in range(2 * third + 1, len(a)) ]
    

    merge_sort_triple(left_part)

    merge_sort_triple(middle_part)

    merge_sort_triple(right_part)
    
    c = merge_triple(left_part, middle_part, right_part)

    for i in range(len(a)):
        a[i] = c[i]
        
    return a

q = [5, 3, 4, 2, 1, 6, 7, 8]

print(merge_sort_triple(q))
assert util.is_sorted(q)

util.plot_sort_results(
    ('Сортировка слиянием с 3 диапазонами', merge_sort_triple),
)
util.plot_sort_results(
    ('Сортировка слиянием с 3 диапазонами', merge_sort_triple),
)